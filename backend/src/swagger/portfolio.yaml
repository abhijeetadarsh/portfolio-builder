tags:
  name: Portfolios
  description: Portfolios endpoints

/api/portfolios:
  post:
    summary: Create a new portfolio
    tags: [Portfolios]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PortfolioRequest"
    responses:
      201:
        description: Portfolio created successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PortfolioResponse"
      400:
        description: Validation error
      500:
        description: Server error

/api/portfolios/{id}:
  put:
    summary: Update a portfolio
    tags: [Portfolios]
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    requestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Portfolio"
    responses:
      200:
        description: Portfolio updated successfully
  delete:
    summary: Delete a portfolio
    tags: [Portfolios]
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      204:
        description: Portfolio deleted successfully

/api/portfolios/share/{link}:
  get:
    summary: Get portfolio by shareable link
    tags: [Portfolios]
    parameters:
      - in: path
        name: link
        required: true
        schema:
          type: string
    responses:
      200:
        description: Portfolio retrieved successfully

components:
  schemas:
    PortfolioRequest:
      type: object
      required:
        - template
        - title
      properties:
        template:
          type: string
          example: "modern"
        title:
          type: string
          example: "My Developer Portfolio"
        description:
          type: string
          example: "A showcase of my work"
        skills:
          type: array
          items:
            type: string
          example: ["JavaScript", "Node.js"]
        projectIds:
          type: array
          items:
            type: integer
          example: [1, 2]
          description: Array of existing project IDs to associate
        certificateIds:
          type: array
          items:
            type: integer
          example: [1, 2]
          description: Array of existing certificate IDs to associate

    PortfolioResponse:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        template:
          type: string
        title:
          type: string
        description:
          type: string
        skills:
          type: array
          items:
            type: string
        shareableLink:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
