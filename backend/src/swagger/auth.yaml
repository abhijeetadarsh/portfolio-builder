tags:
  name: Authentication
  description: User authentication endpoints

paths:
  /api/auth/register:
    post:
      tags: [Authentication]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  minLength: 6
                  example: strongpassword
                name:
                  type: string
                  example: John Doe
      responses:
        201:
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  name:
                    type: string
        400:
          description: Validation error
        500:
          description: Server error

  /api/auth/login:
    post:
      tags: [Authentication]
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: strongpassword
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
        401:
          description: Invalid credentials
        500:
          description: Server error

  /api/auth/change-password:
    put:
      tags: [Authentication]
      summary: Change user password
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - oldPassword
                - newPassword
              properties:
                oldPassword:
                  type: string
                  format: password
                  example: oldpassword
                newPassword:
                  type: string
                  format: password
                  minLength: 6
                  example: newstrongpassword
      responses:
        200:
          description: Password updated successfully
        400:
          description: Invalid new password
        401:
          description: Unauthorized (invalid token or wrong password)
        500:
          description: Server error
